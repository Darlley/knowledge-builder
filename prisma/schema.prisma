// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

// schema.prisma

enum UserRole {
  OWNER
  ADMIN
  EDITOR
}

enum ArticleStatus {
  PUBLISHED
  ARCHIVED
}
enum ArticleAudience {
  CLIENTS
  EMPLOYEES
}

model User {
  id              String @id @unique
  name            String
  firstName       String
  lastName        String
  email           String @unique
  profileImage    String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  Site            Site[]
  posts           Post[]
}

model Site {
  id              String @id @default(uuid())
  name            String
  description     String
  subdirectory    String @unique
  imageUrl        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  User            User?   @relation(fields: [userId], references: [id])
  userId          String?
  posts           Post[]
}

model Post {
  id              String @id @default(uuid())
  name            String
  content         Json
  description     String
  slug            String @unique
  thumbnail       String
  views           BigInt @default(0)
  status          ArticleStatus
  audience        ArticleAudience

  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  User            User?   @relation(fields: [userId], references: [id])
  userId          String?
  Site            Site? @relation(fields: [siteId], references: [id])
  siteId          String?
}